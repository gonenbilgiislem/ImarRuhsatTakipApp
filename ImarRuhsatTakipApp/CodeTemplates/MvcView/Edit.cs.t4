<#@ template language="C#" HostSpecific="True" #>
<#@ output extension=".cshtml" #>
<#@ include file="Imports.include.t4" #>
@model <#= ViewDataTypeName #>
<#
// "form-control" attribute is only supported for all EditorFor() in System.Web.Mvc 5.1.0.0 or later versions, except for checkbox, which uses a div in Bootstrap
string boolType = "System.Boolean";
Version requiredMvcVersion = new Version("5.1.0.0");
bool isControlHtmlAttributesSupported = MvcVersion >= requiredMvcVersion;
// The following chained if-statement outputs the file header code and markup for a partial view, a view using a layout page, or a regular view.
if(IsPartialView) {
#>

<#
} else if(IsLayoutPageSelected) {
#>

@{
    ViewBag.Title = "<#= ViewName#>";
<#
if (!String.IsNullOrEmpty(LayoutPageFile)) {
#>
    Layout = "<#= LayoutPageFile#>";
<#
}
#>
}



<#
} else {
#>

@{
    Layout = null;
}

<!DOCTYPE html>

<html>
<head>
    <meta name="viewport" content="width=device-width" />
    <title><#= ViewName #></title>
</head>
<body>
<#
    PushIndent("    ");
}
#>
<#
if (ReferenceScriptLibraries) {
#>
<#
    if (!IsLayoutPageSelected && IsBundleConfigPresent) {
#>
@Scripts.Render("~/bundles/jquery")
@Scripts.Render("~/bundles/jqueryval")

<#
    }
#>
<#
    else if (!IsLayoutPageSelected) {
#>
<script src="~/Scripts/jquery-<#= JQueryVersion #>.min.js"></script>
<script src="~/Scripts/jquery.validate.min.js"></script>
<script src="~/Scripts/jquery.validate.unobtrusive.min.js"></script>

<#
    }
#>

<#
}
#>
@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    
    
<# 
    if (isControlHtmlAttributesSupported) {
#>
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
<#        
    } else {
#>
        @Html.ValidationSummary(true)
<#      
    }
#>
<#
foreach (PropertyMetadata property in ModelMetadata.Properties)
	{
    if (property.Scaffold && !property.IsAssociation)
	{
        if (property.IsPrimaryKey)
		{
#>
        @Html.HiddenFor(model => model.<#= property.PropertyName #>)
<br>
    <div class="row-fluid">
        <!-- block -->
        <div class="block">
            <div class="navbar navbar-inner block-header">
                <div class="muted pull-left">Kullanıcı Sil</div>
            </div>
            <div class="block-content collapse in">
                <div class="span12">
                    <div class="table-toolbar">
                        <div class="btn-group">
                        </div>
                    </div>

                    <table cellpadding="0" cellspacing="0" border="0" class="table table-striped table-bordered" id="example1">
                        <thead>
                            <tr>
    
<#
        }
		else if (!property.IsReadOnly)
		{
#>
<#
            if (property.IsForeignKey)
			{
#>
			<th>
			@Html.LabelFor(model => model.<#= property.PropertyName #>, "<#= GetAssociationName(property) #>", htmlAttributes: new { @class = "control-label col-md-2" })
			</th>
<#
            }
			else
			{
#>
            <th>
			@Html.LabelFor(model => model.<#= property.PropertyName #>, htmlAttributes: new { @class = "control-label col-md-2" })
			</th>
<#
            }
#>
<#
        }
    }
}
#>    
		</thead>
			<tbody>
				<tr>
                        
<#
foreach (PropertyMetadata property in ModelMetadata.Properties)
	{
    if (property.Scaffold && !property.IsAssociation)
	{	
            bool isCheckbox = property.TypeName.Equals(boolType);
            if (property.IsForeignKey)
			{
				if (isControlHtmlAttributesSupported)
				{
#>
                <td>
				@Html.DropDownList("<#= property.PropertyName #>", null, htmlAttributes: new { @class = "form-control" })
<#
				}
				else
				{
#>
                <td>
				@Html.DropDownList("<#= property.PropertyName #>", String.Empty)
<#
				}
#>
<#
				} 
			else  if (isControlHtmlAttributesSupported) 
				{
					if (isCheckbox)
					{
#>
<#
						PushIndent(" ");
#>
				<td>
				@Html.EditorFor(model => model.<#= property.PropertyName #>)
<#
					}
					else if (property.IsEnum && !property.IsEnumFlags) 
					{
#>
				<td>
				@Html.EnumDropDownListFor(model => model.<#= property.PropertyName #>, htmlAttributes: new { @class = "form-control" })
<#
					}
					else
					{
#>
				<td>
				@Html.EditorFor(model => model.<#= property.PropertyName #>, new { htmlAttributes = new { @class = "form-control" } })
<#
					}
            } 
			else
			{
#>
                <td>
				@Html.EditorFor(model => model.<#= property.PropertyName #>)
<#
            }
#>
<# 
            if (isControlHtmlAttributesSupported)
			{
#>
  				@Html.ValidationMessageFor(model => model.<#= property.PropertyName #>, "", new { @class = "text-danger" })
				</td>
<#        
            }
			else
			{
#>
  				@Html.ValidationMessageFor(model => model.<#= property.PropertyName #>)
				</td>
<#      
            }
#>
<#
            if (isCheckbox && isControlHtmlAttributesSupported) 
			{
                PopIndent();
#>    
<#
        }
    }
}
#>
</tr>
</tbody>
</table>

                    <table cellpadding="0" cellspacing="0" border="0" style="width:100%">
                        <tbody>
                            <tr>
                                <td>
                                    <button type="submit" class="btn btn-success">
                                        <i class="icon-ok icon-white"></i> Kaydet
                                    </button>
                                </td>
                                <td align="right">
                                    <a href="@Url.Action("Index","Kullanicilar")" button class="btn btn-info"> <i class="icon-hand-left icon-white"></i> Geri Dön</a>
                                </td>
                            </tr>
                        </tbody>
                    </table>
                </div>
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>
<#
if(IsLayoutPageSelected && ReferenceScriptLibraries && IsBundleConfigPresent) {
#>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
<#
}
#>
<#
else if(IsLayoutPageSelected && ReferenceScriptLibraries) {
#>

<script src="~/Scripts/jquery-<#= JQueryVersion #>.min.js"></script>
<script src="~/Scripts/jquery.validate.min.js"></script>
<script src="~/Scripts/jquery.validate.unobtrusive.min.js"></script>
<#
}
#>
<#
// The following code closes the tag used in the case of a view using a layout page and the body and html tags in the case of a regular view page
#>
<#
if(!IsPartialView && !IsLayoutPageSelected) {
    ClearIndent();
#>
</body>
</html>
<#
}
#>
<#@ include file="ModelMetadataFunctions.cs.include.t4" #>